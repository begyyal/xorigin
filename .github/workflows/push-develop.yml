name: CI

on:
  push:
    branches: [ develop ]

jobs:

  dev-ci:
    runs-on: ubuntu-latest
    
    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Prepare conditions
      id: ready
      shell: bash
      run: |
        fb=$(./.github/workflows/sh/find_pr_branch.sh feature ${{ github.event_path }})
        tmpb=dev-tmp/${fb#feature/}
        git checkout ${{ github.ref_name }}
        git checkout -b $tmpb
        echo "::set-output name=issue-no::${fb#feature/}"
        echo "::set-output name=tmp::$tmpb"

    - name: Revise comments
      if: ${{ steps.ready.outputs.issue-no != '' }}
      uses: begyyal/act_revise_comments@v1
      with:
        prefix: "#${{ steps.ready.outputs.issue-no }}"
        branch: ${{ steps.ready.outputs.tmp }}

    - name: Set up JDK 15
      uses: actions/setup-java@v2
      with:
        java-version: '15'
        distribution: 'adopt'

    - name: Build with Gradle
      run: |
        chmod +x ./cmd/gradlew
        ./cmd/gradlew build -b ./lib/build.gradle
        ./cmd/gradlew build -b ./cmd/build.gradle

    - name: Test
      run: ./test.sh

    - name: Push dev-tmp
      id: code-update
      run: |
        applied=$(git diff --exit-code --ignore-cr-at-eol --ignore-space-at-eol && : || echo 1)
        [ -z $applied ] || (git add . && git commit -m "BY-CI")
        echo "::set-output name=applied::${applied}"
        git push origin HEAD

    - name: Mark success of status checks
      id: status-checks
      run: |
        head=$(git log --pretty=oneline | head -n 1 | cut -d ' ' -f 1)
        echo "::set-output name=head::${head}"
        curl \
          -X POST \
          -H "AUTHORIZATION: token ${{ github.token }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/statuses/${head} \
          -d '{"state":"success","context":"ci-passed"}'

    - name: Push dev if needed
      if: ${{ steps.code-update.outputs.applied != '' }}
      run: |
        git checkout ${{ github.ref_name }}
        git cherry-pick ${{ steps.status-checks.outputs.head }}
        git push origin ${{ github.ref_name }}

    - name: Push master
      run: |
        git fetch
        git checkout master
        git cherry-pick $(git log ${{ steps.ready.outputs.tmp }} ${{ github.event.before }}..HEAD --pretty=oneline | cut -d " " -f 1 | tac)
        git push origin master
